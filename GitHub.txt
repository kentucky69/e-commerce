
==== LES CONCEPTS CLÃ‰S ðŸ”‘ ====

1. Repository (DÃ©pÃ´t)
C'est comme un dossier de projet qui contient tous vos fichiers
Peut Ãªtre public ou privÃ©
Stocke l'historique complet des modifications

2. FonctionnalitÃ©s principales
âœ·Commit: Une sauvegarde de vos modifications

âœ· Branch (Branche):
Version parallÃ¨le de votre code
Permet de travailler sur des fonctionnalitÃ©s sans affecter le code principal

âœ· Pull Request:
Demande d'intÃ©gration de vos modifications
Permet la revue de code par d'autres dÃ©veloppeurs

âœ· Fork:
Copie personnelle d'un projet
Permet de contribuer Ã  des projets open source


                                        ==== COMMANDES GIT ESSENTIELLES ðŸ’» ====



==== GIT =====
    @

# Cloner un repository
git clone https://github.com/utilisateur/projet.git

==== BRANCHE GIT ==== ðŸŒ²ðŸŒ²  

# CrÃ©er une nouvelle branche
git checkout -b ma-nouvelle-branche

# Travailler sur la branche
git add .
git commit -m "Ajout nouvelle feature"

# Fusionner avec main quand c'est prÃªt
git checkout main
git merge feature/ma-feature


==== CHECKOUT â˜€â¥¹ ==== ðŸ”„

# 1. Revenir Ã  la branche main locale
git checkout main

# 2. RÃ©cupÃ©rer les changements du remote
git fetch origin main

# 3. RÃ©initialiser votre branche main locale pour qu'elle corresponde exactement Ã  origin/main
git reset --hard origin/main

# Revenir Ã  une version prÃ©cÃ©dente
git checkout ma-branche-precedente















# Ajouter des modifications
git add .

# CrÃ©er un commit
git commit -m "Description des modifications"

# Envoyer les modifications sur GitHub
git push origin ma-nouvelle-branche